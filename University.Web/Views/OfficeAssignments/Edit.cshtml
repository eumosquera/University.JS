@model University.BL.DTOs.OfficeAssignmentDTO

@using (Html.BeginForm("Edit", "OfficeAssignments", FormMethod.Post, new { id = "formEditOfficeAssignment" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.InstructorID)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="edit-save" type="button" value="Save" class="btn btn-info" />
            </div>
        </div>
    </div>
}
<!--Js-->
<script>
    $("#edit-save").click(function () {
        editOfficeAssignment();
    });
    function editOfficeAssignment() {

        var formData = $("#formEditOfficeAssignment").serialize();

        $.post(urlBase + "/OfficeAssignments/Edit", formData).done(function (data) {
            console.table(data);

            if (data.IsSuccess) {
                swal("Notification", "Process done successfull!", "success")
                $("#modalOfficeAssignments").modal("hide");
                getOfficeAssignments();

            } else {
                swal("Notification", "Process failure!", "error")
            }

        }).fail(function (data) {
            console.table(data);
        })
    }
</script>
