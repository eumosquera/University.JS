@model University.BL.DTOs.OfficeAssignmentDTO

@using (Html.BeginForm("Create", "OfficeAssignments", FormMethod.Post, new { id = "formCreateOfficeAssignment" }))

@Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <div class="col-md-3">
        <select id="OfficeAssignmetnsSelect" class="form-control"></select>
    </div>
    <hr />
    {

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.InstructorID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InstructorID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InstructorID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="create-save" type="button" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<!--Code Java script-->
<script>
    $(document).ready(function () {
        getOfficeAssignments();
        createOfficeAssignment();
        GetInstructorID();
    });

    $("#create-save").click(function () {

        createOfficeAssignment();
    })

    function createOfficeAssignment() {

        var formData = $("#formCreateOfficeAssignment").serialize();


        $.post("/OfficeAssignments/Create", formData).done(function (data) {

            console.table(data);


            if (data.IsSuccess) {
                swal("Notification", "Process done successfull!", "success");
                $("#modalOfficeAssignments").modal("hide");
                getCourses();

            }
            else {

                swal("Notification", data.Message, "error");
            }

        }).fail(function (data) {

            console.table(data);
            swal("Notification", "Process failure!", "error");
        })

    }

    function GetInstructorID() {
        $.get('/OfficeAssignments/GetInstructorID', function (data) {
            $("#OfficeAssignmentsSelect").empty();
            $("#OfficeAssignmentsSelect").select2({
                placeholder: "Seleccione",
                data: JSON.parse(data)
            });
            $("#OfficeAssignmentsSelect").val("").trigger("change");
        });
    }

</script>
